#! /usr/bin/env ruby

require File.expand_path(File.dirname(__FILE__) + '/../config/boot')

def help(error_msg)
  abort "#{error_msg}\n\nUsage:\n    ./bin/generate_collection_report PROJECT_TAG\n"
end

help "Incorrect number of arguments." unless ARGV.size == 1

project_tag = "\"" << ARGV.shift << "\""

query_tag = "project_tag_facet:#{project_tag}"

resp = Dor::SearchService.query query_tag, :rows => 10000, :fl => 'id, wf_wps_facet, source_id_t, objectLabel_t'

project_file_name = project_tag.gsub(' ','_').gsub('"','')

CSV.open(File.join(File.expand_path(File.dirname(__FILE__)),"/../log/#{project_file_name}_report.csv"), "wb") do |csv|

  # header row 
  csv << ["druid", "label", "source_id", "accessioned", "shelved", "purl"] 
  # data rows 
  resp.docs.each do |doc|
    druid = doc[:id]

    label = doc[:objectLabel_t]
    accessioned = doc[:wf_wps_facet].include? "accessionWF:publish:completed"
    shelved = doc[:wf_wps_facet].include? "accessionWF:shelve:completed"
    source_id = doc[:source_id_t]
    purl_link = ""
    val = druid.split(/:/).last
    purl_link = File.join(Dor::Config.purl.base_url, val) if shelved
    csv << [druid, label, source_id, accessioned, shelved, purl_link]
  end
end

