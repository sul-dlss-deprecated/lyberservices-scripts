#! /usr/bin/env ruby

# Restart the assembly or accessioning workflow for specific source IDs or DRUIDs.  Uncomment the line containing source ids or druids as needed

require File.expand_path(File.dirname(__FILE__) + '/../config/boot')

# a hash which specifies workflow names, and then the steps you want to reset to waiting for that workflow
steps={'assemblyWF'  => ['checksum-compute']}

# if you specify source_ids below, comment this out
druids= [
 'druid:jr535qx4550',
 'druid:gk331ym6149'
]

# if you specifed druids above, comment these out, or else they will be used instead of DRUIDs
# source_ids = [
#   'Revs:2011-023CHAM-1.0_0002',
#   'Revs:2011-023CHAM-1.0_0003'
# ]
if defined? source_ids && source_ids.size > 0 
  druids=source_ids.collect {|sid| Dor::SearchService.query_by_id(sid)}.flatten if source_ids.size > 0 
end

druids.each do |druid|
	puts "** #{druid}"
	begin
	    steps.each do |workflow,states| 
	      states.each do |state| 
	        puts "Updating #{workflow}:#{state} to waiting"
	        Dor::WorkflowService.update_workflow_status 'dor',druid,workflow, state, 'waiting'
        end
      end
    rescue Exception => e
		  puts "an error occurred trying to update workflows for #{druid} with message #{e.message}"
	end
end
